title: Introduction to Arbitrum
key: intro-to-arbitrum
summary: >-
  This is a course that provides a deeper understanding towards the working and
  technicalities of Arbitrum, a cutting-edge layer-2 scaling solution designed
  to enhance the capabilities of Ethereum, one of the most prominent blockchain
  platforms. In this course, we will delve into the intricacies of Arbitrum,
  exploring its two major chains: Arbitrum One and Arbitrum Nova. Our journey
  will guide you through the fundamentals of layer-2 solutions, the specific
  features and advancements of Arbitrum, and how it integrates with the Ethereum
  network to provide faster, more efficient transactions.


  This course offers a blend of theoretical knowledge and practical insights.
  You will learn about the technical underpinnings of Arbitrum, including its
  unique approach to transaction processing and dispute resolution. The course
  also covers the differences between Arbitrum Classic and Nitro, highlighting
  the advancements in efficiency, gas fees, and Ethereum compatibility.


  Whether you are a developer looking to build on Arbitrum, an investor
  interested in understanding its impact on the Ethereum ecosystem, or simply a
  blockchain aficionado eager to expand your knowledge, this course provides
  valuable insights. By the end, you will have a thorough understanding of
  Arbitrum's role in the evolving landscape of blockchain technology and its
  potential to shape the future of decentralized applications. 
highlights:
  - Introduction
  - Arbitrum Nitro
  - Arbitrum One
  - Arbitrum Nova
  - Arbitrum Orbit
  - Arbitrum Stylus
publishStatus: Live
thumbnail: >-
  https://d31h13bdjwgzxs.cloudfront.net/courses/DoDAO/CourseIcons/audit_and_monitoring.png
details: ''
duration: 30 mins - 1 hour
topics:
  - key: introduction
    title: Introduction
    details: >+
      ## What is Arbitrum


      Arbitrum is a Layer 2 scaling solution designed to enhance the Ethereum
      blockchain's scalability and efficiency. It processes transactions
      separately from Ethereum's main chain and utilizes Rollup technology to
      combine multiple transactions into one, increasing throughput and reducing
      costs. Arbitrum maintains compatibility with Ethereum's existing tools and
      smart contracts, allowing for straightforward application deployment.
      Developed by Offchain Labs, it includes the Arbitrum One mainnet, which
      supports smart contract execution with Ethereum network validation. The
      use of Arbitrum significantly lowers transaction fees, making it a
      cost-effective alternative for running decentralized applications and
      smart contracts compared to Ethereum's mainnet.


      ## What is Layer 2 


      Layer 2 refers to a secondary framework or protocol that is built on top
      of an existing blockchain system, known as Layer 1. The primary purpose of
      Layer 2 solutions is to address the scalability and performance issues of
      the main blockchain by handling transactions off the main chain. This
      allows for faster processing times and reduced transaction costs, without
      compromising the decentralized security model of the underlying
      blockchain. Layer 2 solutions include various technologies such as state
      channels, sidechains, and rollups, each with their own approach to
      off-chain transaction handling and subsequently settling the final state
      on-chain.


      <div align="center">
        <img style="max-height:600px;margin-bottom:40px" src="https://d31h13bdjwgzxs.cloudfront.net/academy/arbitrum-university/Guide/introduction_to_arbitrum_arbitrum_university_794/1700676990117_lyer_2.png"/>
      </div>


      ## Benefits of Layer 2


      1. **Increased Transaction:** Throughput By handling transactions off the
      main chain, Layer 2 can process many more transactions per second than the
      base layer, alleviating congestion.


      2. **Reduced Costs:** Transactions on Layer 2 typically incur lower fees
      because they minimize the demand on the network's main chain resources.


      3. **Improved Speed:** Transactions can be completed faster on Layer 2, as
      they are not subject to the longer processing times of the main chain.


      <div align="center">
        <img style="max-height:600px;margin-bottom:40px" src="https://d31h13bdjwgzxs.cloudfront.net/academy/arbitrum-university/Guide/introduction_to_arbitrum_arbitrum_university_794/1700677028811_benefits.png"/>
      </div>


      4. **Enhanced Scalability:** Layer 2 can scale independently from the main
      chain, allowing the network to support more users and applications without
      a proportional increase in transaction costs or times.


      5. **Maintained Security:** Despite processing transactions off-chain,
      Layer 2 solutions typically inherit the strong security guarantees of the
      underlying main chain.

    explanations: introduction.yaml
  - key: arbitrum-nitro
    title: Arbitrum Nitro
    details: >-
      ## What is Arbitrum Nitro?


      Arbitrum Nitro is a significant technical upgrade for Arbitrum, which is a
      Layer 2 scaling solution for Ethereum. It aims to lower transaction fees
      and increase the processing capacity of Ethereum by moving contract
      computation and storage from the primary chain. This upgrade, known as
      Nitro, is designed to be more compatible with the Ethereum Virtual Machine
      (EVM) and provides a better user experience with lower fees and faster
      transactions. With Nitro, Arbitrum aims to push the boundaries of
      security, efficiency, and scalability, offering a promising solution for
      the future of Ethereum. 


      <div align="center">
        <img style="max-height:600px;margin-bottom:40px" src="https://d31h13bdjwgzxs.cloudfront.net/academy/arbitrum-university/Guide/arbitrum_nitro_arbitrum_university_560/1700677384029_nitro.png"/>
      </div>


      It introduces advanced calldata compression, reducing transaction costs
      even further. Nitro enhances the performance of Layer 1 (L1) nodes, aligns
      EVM operation pricing with Ethereum, and introduces additional
      synchronization with Ethereum L1 blocks. As it seamlessly supports the
      Ethereum Virtual Machine (EVM), no hefty modifications are required. With
      Nitro, transactions on Arbitrum have become extremely efficient. 


      ## Innovative Features of Arbitrum Nitro


      #### WebAssembly Code


      Nitro introduces a new prover that uses WebAssembly (WASM) code to perform
      Arbitrum's interactive fraud proofs. This upgrade enhances the scalability
      and efficiency of the system, allowing for thousands of transactions to be
      processed per second. Despite being a separate blockchain, Arbitrum Nitro
      maintains the security and privacy features of Ethereum's Layer 1 (L1) and
      relays all transaction information to the main Ethereum chain.


      <div align="center">
        <img style="max-height:600px;margin-bottom:40px" src="https://d31h13bdjwgzxs.cloudfront.net/academy/arbitrum-university/Guide/arbitrum_nitro_arbitrum_university_560/1700677415896_features.png"/>
      </div>


      #### EVM Compatiblility


      Developers can easily integrate Arbitrum Nitro without making any
      modifications because it supports the EVM. This means that existing
      Ethereum contracts and transactions can run on Arbitrum without any
      changes. This distinguishes Arbitrum Nitro from other layer 2 solutions as
      each have their own VMs thereby requiring modifications for integration. 


      #### Deterministic Transactions


      To use Arbitrum Nitro, users need to submit their transactions to the
      chain's inbox. The chain will then execute the transaction and produce
      outputs, including a transaction receipt and any initiated withdrawals.
      The execution of transactions is deterministic, meaning that the result is
      known as soon as the transaction is placed in the inbox. Arbitrum ensures
      the correctness of the chain state and outputs, supports
      Ethereum-compatible contracts and transactions, and manages the transfer
      and management of ETH and tokens on the chain. 
    explanations: arbitrum-nitro.yaml
  - key: arbitrum-one
    title: Arbitrum One
    details: >-
      ## What is Arbitrum One ?

      Arbitrum One is a Layer 2 optimistic rollup solution developed by Offchain
      Labs, designed to enhance Ethereum's performance and user experience by
      handling transactions off the Ethereum Mainnet (Layer 1). It operates on
      the Arbitrum Rollup protocol and settles to Ethereum's Layer 1, offering
      high-performance dApps with lower transaction costs and Ethereum-level
      security without additional trust assumptions. Powered by the Nitro
      technology stack, Arbitrum One boasts advanced features like calldata
      compression, separate contexts for execution and fault proving, and
      Ethereum L1 gas compatibility. Its multi-round interactive Optimistic
      Rollup approach optimistically assumes the correctness of data posted to
      the Ethereum mainnet, allowing challenges and efficient dispute resolution
      at low costs, while maintaining trustless protocol operation, EVM
      compatibility, and secure fund control for users.


      <div align="center">
        <img style="max-height:700px;margin-bottom:40px" src="https://d31h13bdjwgzxs.cloudfront.net/academy/arbitrum-university/Guide/arbitrum_one_arbitrum_university_177/1700678482803_arbitrum_one.png"/>
      </div>


      ## What is Arbitrum roll up protocol?

      The Arbitrum Rollup Protocol is a Layer 2 scaling solution that works in
      tandem with Ethereum's Layer 1, where it doesn't decide the outcomes of
      transactions but instead confirms the results that are already determined
      by the sequence of messages in the chain's inbox. Once a transaction is
      included in the chain’s inbox, its outcome is considered finalized and can
      be reported as complete. Arbitrum nodes validate these transactions,
      providing users the confidence that their transactions are processed
      without the need for constant awareness of the rollup protocol's
      operation.


      ### Benefits of Roll up Protocol

      The purpose of the Arbitrum Rollup Protocol is twofold.
       
      #### Confirms Accuracy

      Firstly, it serves as a trustless method to verify transaction results and
      to identify and penalize dishonest parties. This is crucial because
      although the outcomes of transactions are known, without the protocol,
      there would be no way to confirm their accuracy and resolve disputes
      definitively. 


      <div align="center">
        <img style="max-height:400px;margin-bottom:30px" src="https://d31h13bdjwgzxs.cloudfront.net/academy/arbitrum-university/Guide/arbitrum_one_arbitrum_university_177/1701107009421_benefits_of%20rollup.png"/>
      </div>


      #### Ethereum Scalability

      Secondly, it relieves Ethereum from the burden of processing every
      transaction, thereby allowing for scalable operations that Ethereum alone
      could not efficiently monitor. By only stepping in when a transaction is
      contested, Ethereum can ensure the integrity of the Arbitrum chain while
      enabling fast and cost-effective Layer 2 transactions. This not only
      enhances the scalability of Ethereum but also maintains its security by
      enabling the confirmation of transactions and the processing of
      withdrawals back to Layer 1.
    explanations: arbitrum-one.yaml
  - key: arbitrum-nova
    title: Arbitrum Nova
    details: >-
      ## What is Arbitrum Nova?

      Arbitrum Nova is a variant within the Arbitrum ecosystem that provides a
      high-performance blockchain solution. Arbitrum Nova operates on the
      AnyTrust protocol, which is mostly trustless but introduces a new element
      of trust. The core of this additional trust assumption is the Data
      Availability Committee (DAC), which has the task of efficiently handling
      Layer 2 transaction data—storing it, batching it, and then posting it to
      Ethereum's Layer 1. The presence of the DAC in the AnyTrust protocol is
      what allows Arbitrum Nova to offer enhanced performance and
      cost-effectiveness, making it suitable for use cases where these
      attributes are prioritized. 


      <div align="center">
        <img style="max-height:600px;margin-bottom:40px" src="https://d31h13bdjwgzxs.cloudfront.net/academy/arbitrum-university/Guide/arbitrum_nova_arbitrum_university_144/1701175411237_anytrust_intro.png"/>
      </div>


      ## What is Anytrust Protocol 

      The AnyTrust protocol is a variation of the Arbitrum Nitro technology
      designed to reduce costs by incorporating a slight trust assumption.
      Instead of requiring every node within the Arbitrum network to have access
      to all Layer 2 transaction data—typically ensured by posting this data on
      Ethereum's Layer 1, AnyTrust delegates this responsibility to a Data
      Availability Committee. This committee, comprising multiple members,
      operates under the assumption that at least two members are honest.
      Consequently, even if the majority collude, the integrity of data
      availability is maintained, allowing the rollup protocol to function
      correctly and reducing the reliance on Ethereum's more costly data posting
      process.


      ### Benefits of AnyTrust

      The benefits of AnyTrust are extensive including:


      <div align="center">
        <img style="max-height:400px;margin-bottom:30px" src="https://d31h13bdjwgzxs.cloudfront.net/academy/arbitrum-university/Guide/arbitrum_nova_arbitrum_university_144/1701175449131_faide_anytrust.png"/>
      </div>


      #### 1. Cost Reduction 

      The AnyTrust protocol reduces costs on the Arbitrum system by entrusting a
      Committee with data storage and distribution, thus minimizing the data
      posted to Ethereum's mainnet. Through a managed system of public keys and
      signatures called Keysets, it ensures data integrity while lessening the
      gas fees typically incurred for data posting.


      #### 2. Operational Efficiency 

      The KeysetManager contract on L1 manages Keysets to facilitate secure and
      flexible operation of the Committee, allowing for easy updates to
      membership and keys. This ensures data availability and supports a
      trust-minimized, efficient blockchain ecosystem.
    explanations: arbitrum-nova.yaml
  - key: arbitrum-orbit
    title: Arbitrum Orbit
    details: >-
      ## What is Orbit?

      Arbitrum Orbit enables the creation of private blockchain chains with
      customizable features, such as governance and fee structures, which settle
      transactions on Arbitrum's Layer 2 ecosystems like Arbitrum One or Nova.
      It utilizes the Arbitrum Nitro technology stack, offering benefits like
      Nitro's fraud proofs, advanced data compression, and EVM+ compatibility,
      while also allowing for ongoing upgrades from the Nitro stack
      developments. Orbit chains can be tailored for specific applications or
      broader use cases, offering gas price stability, permissioned access, and
      the choice between Rollup or AnyTrust protocols. Governance is
      independently determined by the chain creators, providing a flexible,
      scalable, and secure platform for hosting a range of dApps or private
      EVM-compatible smart contracts, with the ability to incrementally adopt
      Ethereum's security features.


      <div align="center">
        <img style="max-height:400px;margin-bottom:30px" src="https://d31h13bdjwgzxs.cloudfront.net/academy/arbitrum-university/Guide/arbitrum_orbit_arbitrum_university_525/1701177231413_orbit.png"/>
      </div>


      ## Benefits of Orbit

      Arbitrum Orbit addresses several key challenges within the Ethereum
      ecosystem:


      **1. Scalability:** Orbit facilitates scalability by allowing the creation
      of multiple chains. This helps alleviate scaling challenges by
      distributing activities across various environments, each with its own
      resource management, thereby easing bottlenecks that could arise on a
      single chain.


      **2. Flexible Security Models**: With Orbit, developers can implement and
      test different security models to find the right balance for their
      projects. For instance, while Arbitrum One offers a fully trustless
      environment, Arbitrum Nova provides an option to optimize for lower fees
      with a mild trust assumption. Orbit extends this flexibility, making
      experimentation with security tradeoffs more accessible.


      **3. Flexible Execution Environments**: Orbit chains allow for customized
      execution environments. While maintaining full EVM compatibility, Orbit
      chains can also limit smart contract functionalities to better serve
      specific project requirements, leading to optimized performance.


      <div align="center">
        <img style="max-height:400px;margin-bottom:30px" src="https://d31h13bdjwgzxs.cloudfront.net/academy/arbitrum-university/Guide/arbitrum_orbit_arbitrum_university_525/1701177276212_benefits_of%20orbit.png"/>
      </div>


      **4. Flexible Governance**: Developers have the autonomy to establish
      their own governance mechanisms on Orbit chains, which can be tailored to
      suit the unique needs of their projects, communities, or stakeholders.


      **5. Increased Adoption of dApps**: Orbit lowers barriers to progressive
      decentralization, making it more feasible for developers to launch
      decentralized applications. It enables a new breed of dApps that benefit
      from being built in more autonomous, self-managed conditions, potentially
      increasing the adoption and diversity of dApps within the blockchain
      space.
    explanations: arbitrum-orbit.yaml
  - key: arbitrum-stylus
    title: Arbitrum Stylus
    details: >-
      ## What is stylus 

      Stylus is a cutting-edge tool designed to enhance the development of smart
      contracts on the Arbitrum platform, which is part of the broader Ethereum
      ecosystem. It expands the capabilities of smart contract creation on the
      Arbitrum platform by allowing developers to utilize a wide array of
      programming languages that compile into WebAssembly (WASM). This means
      that languages such as Rust, C, and C++ can now be employed to write
      EVM-compatible smart contracts. This is enabled through the use of the
      Stylus Software Development Kit (SDK) and its accompanying command-line
      interface (CLI) tool. It leverages Arbitrum's existing WASM infrastructure
      to ensure that these smart contracts benefit from the platform's efficient
      execution environment, which translates into faster performance and
      reduced gas costs. This efficiency gain is attributed to WASM's modern
      binary format, known for speed, portability, and security. 


      <div align="center">
        <img style="max-height:500px;margin-bottom:40px" src="https://d31h13bdjwgzxs.cloudfront.net/academy/arbitrum-university/Guide/introduction_to_stylus_arbitrum_university_536/1701186611147_stylus.png"/>
      </div>


      Stylus represents an upgrade to Arbitrum Nitro, a technology stack that
      powers various Arbitrum chains, and is part of the EVM+ paradigm,
      maintaining full interoperability with existing Solidity contracts. The
      innovation of Stylus lies in its ability to deterministically prove the
      correctness of any program that compiles to WASM, owing to Arbitrum
      Nitro's unique fraud-proving capabilities, which are integral to
      maintaining network integrity and trust.


      ## Importance of stylus

      Stylus has transformed the developement of smart constracts. Some of the
      key advantages are:


      **1. Multi-Language Support:** Stylus broadens access to Arbitrum's
      blockchain development by accommodating a variety of programming
      languages. With only 20,000 Solidity developers, the inclusion of Rust and
      C—with their combined 15 million developers—could greatly accelerate the
      platform's growth and user adoption.


      **2. EVM Compatibility:** Stylus combines the traditional benefits of the
      EVM with improved efficiency and a rich set of libraries from languages
      like Rust, C, and C++, elevating the standard for smart contract
      development without altering EVM's core functionality.


      <div align="center">
        <img style="max-height:400px;margin-bottom:30px" src="https://d31h13bdjwgzxs.cloudfront.net/academy/arbitrum-university/Guide/introduction_to_stylus_arbitrum_university_536/1701188225600_importance_stylus.png"/>
      </div>


      **3. Cost-Effective Advanced Cryptography:** Stylus enables previously
      impractical use cases with more than tenfold computational and over a
      hundredfold memory efficiency improvements. It allows for the deployment
      of custom cryptography libraries, fostering a new era of blockchain
      innovation.


      **4. Opt-In Reentrancy Protection:** Stylus not only saves money and runs
      faster but also increases security. It automatically guards against
      reentrancy, a common problem in smart contracts, and this feature is
      turned on from the start to prevent issues.


      **5. Full Interoperability:** Solidity and WASM programs can work together
      smoothly. Developers can mix languages, using Solidity to run Rust code,
      or vice versa, without any extra setup.
    explanations: arbitrum-stylus.yaml
courseAdmins:
  - '0x34d014758297c00fea49935fce172677904d51ef'
  - '0x2a6af0619be90d129ab0d70c10e25c097b6ec67d'
topicConfig:
  showExplanations: true
  showHints: true
